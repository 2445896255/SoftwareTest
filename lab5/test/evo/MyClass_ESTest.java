/*
 * This file was automatically generated by EvoSuite
 * Wed May 20 10:17:29 GMT 2020
 */


import evo.MyClass;
import evo.MyClass_ESTest_scaffolding;
import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MyClass_ESTest extends MyClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("0W|YuR&k7vjp)S");
      myClass0.reverseString("VayN&on_:}WFT");
      myClass0.reverseString("");
      myClass0.reverseString("TFW}:_no&NyaV");
      myClass0.reverseString("");
      myClass0.reverseString("VayN&on_:}WFT");
      myClass0.isHappy(1);
      myClass0.isHappy((-1));
      myClass0.getNext((-1));
      myClass0.isPrimeNum(2860);
      myClass0.selfDividing(0);
      myClass0.getNext(5206);
      myClass0.getGCD(82, 1);
      myClass0.fib(1);
      myClass0.getNext(0);
      myClass0.getGCD((-1612), 0);
      myClass0.getGCD((-1), 0);
      myClass0.isPrimeNum(2467);
      myClass0.IsPalindrome1("pICSFq");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.reverseString("DA!A@)");
      myClass0.reverseString("");
      int int0 = 1121;
      myClass0.isHappy(1121);
      // Undeclared exception!
      try { 
        myClass0.reverseString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      String string0 = "Zf~412cu\"K-d>C-,|";
      myClass0.reverseString("Zf~412cu\"K-d>C-,|");
      myClass0.reverseString("2*=GO?0|b@*Ag=S");
      myClass0.reverseString("2*=GO?0|b@*Ag=S");
      myClass0.getNext((-653));
      myClass0.isPrimeNum((-653));
      myClass0.lcm(527, 527);
      myClass0.reverseString("2*=GO?0|b@*Ag=S");
      myClass0.IsPalindrome1("$");
      myClass0.reverseString("$");
      myClass0.reverseString("mmKXzr.fK)yl1");
      myClass0.isLeapYear(1);
      // Undeclared exception!
      try { 
        myClass0.addBinary("", "|oOfduBGT0R");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.reverseString("=]$S7Cpi$&");
      myClass0.IsPalindrome1("lse:+u*h");
      myClass0.reverseString("=]$S7Cpi$&");
      myClass0.reverseString("evo.MyClass");
      myClass0.getNext(0);
      myClass0.reverseString("");
      myClass0.reverseString("=]$S7Cpi$&");
      myClass0.fib(0);
      int int0 = 2;
      myClass0.isPrimeNum(2);
      myClass0.reverseString("&$ipC7S$]=");
      myClass0.reverseString(" >edt?Al5-i0Y=w)eZq");
      // Undeclared exception!
      try { 
        myClass0.addBinary("lse:+u*h", " >edt?Al5-i0Y=w)eZq");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"lse:+u*h\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.reverseString("=Zl<kIku!ZSuK$+!");
      myClass0.reverseString("=Zl<kIku!ZSuK$+!");
      int int0 = (-1992);
      myClass0.reverseString("");
      myClass0.reverseString("=Zl<kIku!ZSuK$+!");
      myClass0.selfDividing((-1992));
      myClass0.IsPalindrome1("=Zl<kIku!ZSuK$+!");
      int int1 = 1050;
      myClass0.fib(int1);
      myClass0.isLeapYear(int0);
      int int2 = 0;
      int int3 = 0;
      myClass0.getGCD(int2, int3);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.getGCD(0, 0);
      myClass0.isHappy(0);
      myClass0.getNext(0);
      myClass0.containsString("", "O{");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.isLeapYear(0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("-$c{ZD#~@HEekw%WfG#");
      myClass0.isHappy(56);
      myClass0.isLeapYear(56);
      myClass0.reverseString("#GfW%wkeEH@~#DZ{c$-");
      myClass0.reverseString("");
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      String string0 = null;
      myClass0.reverseString("");
      // Undeclared exception!
      try { 
        myClass0.IsPalindrome1((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.getNext(2219);
      String string0 = "";
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.reverseString("");
      String string1 = null;
      myClass0.reverseString("*I>6u9@d!gaV!jW]");
      // Undeclared exception!
      try { 
        myClass0.containsString((String) null, "evo.MyClass");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.IsPalindrome1("IX{{G4");
      myClass0.containsString("IX{{G4", "IX{{G4");
      myClass0.reverseString("");
      myClass0.selfDividing((-2057));
      myClass0.fib((-2057));
      myClass0.fib((-2057));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString(",");
      myClass0.lcm((-1), (-1));
      myClass0.IsPalindrome1("");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.reverseString("evo.MyClass");
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.getGCD((-564), 0);
      myClass0.reverseString("u%CY5)LVhS*<y");
      myClass0.IsPalindrome1("");
      myClass0.isPrimeNum(0);
      myClass0.getGCD((-564), 0);
      myClass0.isPrimeNum(564);
      myClass0.isLeapYear((-564));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.fib(1);
      myClass0.reverseString("");
      // Undeclared exception!
      try { 
        myClass0.addBinary((String) null, (String) null);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.isHappy(1);
      myClass0.isHappy(1);
      myClass0.selfDividing(36);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.getNext(1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.selfDividing(48);
      myClass0.containsString("PVz]m|JVZ^E[L>4@", "");
      myClass0.selfDividing(2990);
      myClass0.isLeapYear(0);
      myClass0.lcm(2990, (-2226));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.getNext(0);
      // Undeclared exception!
      try { 
        myClass0.lcm(0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("|aC':!j6%t");
      myClass0.reverseString("");
      myClass0.fib(0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("evo.MyClass");
      myClass0.getGCD(0, (-518));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.getNext((-2837));
      myClass0.reverseString("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.isPrimeNum((-1));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.isLeapYear((-1790));
      myClass0.lcm(0, (-1790));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("`J");
      myClass0.reverseString("J`");
      String string0 = "o_B)\"6zDyI40S";
      myClass0.containsString("o_B)\"6zDyI40S", "[NgC<jQvs");
      // Undeclared exception!
      try { 
        myClass0.reverseString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("7)n5Pl$?[,JN");
      String string0 = "*D-3@w";
      myClass0.reverseString("*D-3@w");
      // Undeclared exception!
      try { 
        myClass0.addBinary("as7?pdI#s>", "as7?pdI#s>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"as7?pdI#s>\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      String string0 = "n=S%4yBU3{";
      myClass0.reverseString("n=S%4yBU3{");
      myClass0.reverseString("Q");
      String string1 = "";
      myClass0.containsString("n=S%4yBU3{", "");
      myClass0.reverseString("");
      myClass0.reverseString("{3UBy4%S=n");
      myClass0.lcm(172, 0);
      myClass0.containsString("Q", "");
      myClass0.isHappy(417);
      // Undeclared exception!
      myClass0.fib(172);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.lcm(400, 400);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.isLeapYear(2958);
      myClass0.reverseString("");
      myClass0.reverseString("[wT2Q=,cN,R%");
      myClass0.isHappy(2958);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      // Undeclared exception!
      myClass0.fib(48);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.containsString("", "");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("yX");
      myClass0.reverseString("");
      myClass0.reverseString(");{");
      myClass0.reverseString("6Qur)]&o)Y0u1");
      myClass0.reverseString("6Qur)]&o)Y0u1");
      myClass0.reverseString("'#yt>'g(b?h");
      myClass0.isHappy(1);
      myClass0.reverseString("SNFG-5Ixd?\"0z!X");
      myClass0.getGCD(5874, 1);
      myClass0.reverseString("");
      myClass0.reverseString("a<");
      myClass0.reverseString("&~_aKJ$TI(jB-");
      myClass0.selfDividing(4665);
      myClass0.isPrimeNum(5874);
      myClass0.reverseString("'#yt>'g(b?h");
      myClass0.reverseString("");
      myClass0.IsPalindrome1("");
      myClass0.reverseString("1u0Y)o&])ruQ6");
      myClass0.isHappy(1);
      myClass0.isHappy(0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.selfDividing((-528));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("GX9?cEM+QXH,uj k-");
      myClass0.reverseString("");
      myClass0.reverseString("3ipoJOH$T");
      myClass0.reverseString("T$HOJopi3");
      myClass0.reverseString("");
      int int0 = (-880);
      // Undeclared exception!
      try { 
        myClass0.reverseString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("N>^}Wut\u0002BTg!>B");
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.reverseString("");
      String string0 = "";
      myClass0.reverseString("");
      int int0 = 2895;
      myClass0.lcm(400, 400);
      myClass0.IsPalindrome1("");
      // Undeclared exception!
      try { 
        myClass0.addBinary("NKh-!dKX|14", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"NKh-!dKX|14\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("xac");
      myClass0.reverseString("cax");
      myClass0.reverseString("");
      myClass0.isPrimeNum(0);
      myClass0.reverseString("");
      myClass0.isLeapYear(0);
      myClass0.reverseString("");
      myClass0.IsPalindrome1("cax");
      myClass0.selfDividing(0);
      myClass0.selfDividing(0);
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.getGCD(0, 1053);
      myClass0.IsPalindrome1("");
      myClass0.isLeapYear((-1));
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.lcm(1053, 0);
      myClass0.isLeapYear((-1601));
      myClass0.isPrimeNum(398);
      myClass0.lcm(1, 0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      // Undeclared exception!
      try { 
        myClass0.reverseString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.isLeapYear((-2425));
      myClass0.IsPalindrome1("Fra>H_@}^J@[.Vl,K");
      myClass0.getGCD(2398, (-299));
      myClass0.reverseString("Fra>H_@}^J@[.Vl,K");
      myClass0.reverseString("evo.MyClass");
      myClass0.getNext((-2425));
      String string0 = "4_~p~*Z 0M";
      myClass0.reverseString("4_~p~*Z 0M");
      myClass0.containsString("", "K,lV.[@J^}@_H>arF");
      myClass0.fib((-2049));
      // Undeclared exception!
      try { 
        myClass0.addBinary("M0 Z*~p~_4", "0OUTtsUG>mX'R>");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"M0 Z*~p~_4\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("evo.MyClass");
      myClass0.reverseString("");
      myClass0.reverseString("");
      myClass0.reverseString("evo.MyClass");
      myClass0.reverseString("o[0d");
      myClass0.reverseString("");
      // Undeclared exception!
      try { 
        myClass0.reverseString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("evo.MyClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      myClass0.reverseString("vn/@w!1t]c,5-");
      String string0 = "";
      // Undeclared exception!
      try { 
        myClass0.addBinary("vn/@w!1t]c,5-", "");
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"vn/@w!1t]c,5-\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      String string0 = "n=S%4yBU3{";
      myClass0.reverseString("n=S%4yBU3{");
      myClass0.reverseString("Q");
      String string1 = "";
      myClass0.IsPalindrome1("Q");
      myClass0.reverseString("");
      myClass0.reverseString("{3UBy4%S=n");
      myClass0.lcm(172, 0);
      myClass0.containsString("Q", "");
      myClass0.isHappy(417);
      // Undeclared exception!
      myClass0.fib(172);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      MyClass myClass0 = new MyClass();
      String string0 = myClass0.reverseString("QW@}$");
      assertEquals("$}@WQ", string0);
      
      myClass0.reverseString("");
      myClass0.reverseString("D3X'=kv^WnTQoB3`!");
      boolean boolean0 = myClass0.isPrimeNum(0);
      int int0 = myClass0.getNext(0);
      assertEquals(0, int0);
      
      boolean boolean1 = myClass0.selfDividing(0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }
}
